=======================================================Java Access Modifiers============================================================

------------------------------------------------------------------------------------------------------------------------------------------

Ques.	What are Access Modifiers?
Ans.	In Java, access modifiers are used to set the accessibility (visibility) of classes, interfaces, variables, methods, constructors, data 		members, and the setter methods. 
	For example,

	class Animal 
	{
    	  public void method1() {...}
	  private void method2() {...}
	}

	In the above example, we have declared 2 methods: method1() and method2(). Here,
	method1 is public - This means it can be accessed by other classes.
	method2 is private - This means it can not be accessed by other classes.

Note : 	1.  the keyword public and private. These are access modifiers in Java. They are also known as visibility modifiers.
	2.  You cannot set the access modifier of getters methods.

	Types of Access Modifier
	There are four access modifiers keywords in Java and they are:

		Modifier				Description
      	1.	Default					declarations are visible only within the package (package private).
	2.	Private					declarations are visible within the class only.
	3.	Protected				declarations are visible within the package or all subclasses.
	4.	Public					declarations are visible everywhere.


	Understanding Java Access Modifiers
	Let's understand the access modifiers in Java by a simple table.

	Access Modifier		within class		within package		outside package by subclass only	outside package
	Private			Y			N				N					N
	Default			Y			Y				N					N
	Protected		Y			Y				Y					N
	Public			Y			Y				Y					Y


------------------------------------------------------------------------------------------------------------------------------------------




*********************************** Private Access Modifier ***********************************************************
	The private access modifier is accessible only within the class.
	When variables and methods are declared private, they cannot be accessed outside of the class. 
	For example,

	class A
	{
    	   // private variable
    	   private String name;
	}

	class B
	{
           public static void main(String[] main)
	   {

           // create an object of Data
           Data d = new Data();

           // access private variable and field from another class
          d.name = "vijendra";
          }
        }

	In the above example, we have declared a private variable named name. When we run the program, we will get the following error:

	Main.java:18: error: name has private access in Data
        d.name = "vijendra";
         ^
	The error is generated because we are trying to access the private variable of the A class from the B class.

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@Role of Private Constructor@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	If you make any class constructor private, you cannot create the instance of that class from outside the class.
*****************************************************************************************************************************************